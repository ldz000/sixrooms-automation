package sixrooms.seat.lesson01;

/**
 * 1.类的定义：类是对同一事物的一个抽象描述，类中会定义这一事物所具备的静态特征和动态特征。
 * 2.对象：对象是一类事物的一个具体描述，会包含这一类事物所规定的所有特征，并对每一个特征加以具体的描述。
 * 3.类和对象之间的关系：
 *    (1)类是对象的模板，对象是类中定义的特征的具体实现。
 *    (2)对象都是由类创建的，创建对象的过程又叫做实例化。
 *    (3)一个类可以创建多个对象，每一个对象都会拥有这个类定义的全部特征，但对象之间又互不相同。
 * 4.在实际开发中，一般都会先定义类，然后根据所关注的特征来给类添加静态变量和动态变量，所以先有类，后有对象。
 * 但是不会讲实际生活中的这一类事物的全部特征，均定义在程序中，只选取关注的特征。
 * 5.在java中使用class关键字+类名的形式来定义，而类的组成部分：
 * (1)属性=成员变量=类的静态特征
 * (2)方法=成员方法=类的行为=类的动态特征
 * 6.在一个.java文件中，可以定义多个类
 *
 * 7.同一个.java文件中，可以有0个或至多一个类被public修饰，被public修饰的类必须和文件名相一致。
 * 8.每一个class经过编译后对应一个.class文件，如果一个.java文件中包含多个class，那么这个.java文件编译后就会生成多个.class文件。
 */
public class Student {
    //属性的定义形式：权限修饰符 数据类型 属性名称；
    private int no;
    //类中定义的属性，在创建对象时会被自动化为该类型默认值，int类型默认值0，boolean类型默认值false，对象类型是null。
    //对象类型=引用类型=java中八种基本数据类型之外的所有数据类型的统称
    private int score;
    private char firstName;


    public int study(){
        return 100;
    }
    /**
     * 1.方法就是类的行为，定义形式如下：
     * 权限修饰符 返回值类型 方法名（参数）{方法体语句；}
     *
     * 2.方法的极限修饰符一般用public
     *
     * 3.所谓返回值类型就是方法执行后得到的结果的类型，例如一个方法执行后得到的结果为int类型，则返回值类型处写int，如果方法不需要返回值，返回值类型处写void
     *
     * 4.方法的返回值使用return进行返回的：return+返回值；
     * 如果是void的方法，则return；或者省略不写return；
     *
     * 5.所谓参数是指的是定义
     * 6.方法的命名和功能相关，如学习英语的方法：studyingEnglish（）
     * 7.实际开发中一般会通过接收方法的返回值来判断该方法是否成功
     */
    public int getNo(){
        return no;
    }
    public void setNo(int newNo){
        no=newNo;
    }
}
class Person{

}

class Teacher{

}

